name: CD

on:
  workflow_run:
    workflows: ["CI"]  # CI 워크플로우 이름
    types:
      - completed  # CI 완료 후 실행

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ CI에서 빌드한 JAR 다운로드
      - name: Download JAR artifact
        uses: actions/download-artifact@v4
        with:
          name: backend-jar
          path: ./build/libs/

      # 2️⃣ .env 파일 생성
      - name: Create .env file
        run: |
          echo "DEV_DB_HOST=${{ secrets.DEV_DB_HOST }}" >> .env
          echo "DEV_DB_PORT=${{ secrets.DEV_DB_PORT }}" >> .env
          echo "DEV_DB_NAME=${{ secrets.DEV_DB_NAME }}" >> .env
          echo "DEV_DB_USER=${{ secrets.DEV_DB_USER }}" >> .env
          echo "DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> .env
          echo "DEV_JWT_SECRET=${{ secrets.DEV_JWT_SECRET }}" >> .env
          echo "DEV_KAKAO_CLIENT_ID=${{ secrets.DEV_KAKAO_CLIENT_ID }}" >> .env
          echo "DEV_KAKAO_CLIENT_SECRET=${{ secrets.DEV_KAKAO_CLIENT_SECRET }}" >> .env
          echo "DEV_KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}" >> .env

      # 3️⃣ JAR 확인
      - name: Check JAR
        run: ls -l build/libs/

      # 4️⃣ EC2로 JAR + .env 전송
      - name: Deploy to EC2
        uses: appleboy/scp-action@v0.1.5
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          source: |
            build/libs/*.jar
            .env
          target: /home/ubuntu/backend/

      # 5️⃣ 백엔드 서비스 재시작
      - name: Restart backend service
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            sudo systemctl daemon-reload
            sudo systemctl restart backend.service
            sudo systemctl status backend.service
