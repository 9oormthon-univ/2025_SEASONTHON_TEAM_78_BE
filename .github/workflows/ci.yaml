name: CI  # 워크플로우 이름

on:
  push:
    branches:
      - main  # main 브랜치에 푸시될 때 실행
  pull_request:
    branches:
      - main  # main 브랜치로 PR 생성 시 실행

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # 1️⃣ 코드 저장소 체크아웃
      - name: Checkout repository
        uses: actions/checkout@v3

      # 2️⃣ JDK 21 설치
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          distribution: temurin
          java-version: 21

      # 3️⃣ .env 파일 생성 (테스트용으로 CI에서만 필요할 경우)
      - name: Create .env file
        run: |
          echo "DEV_DB_HOST=${{ secrets.DEV_DB_HOST }}" >> .env
          echo "DEV_DB_PORT=${{ secrets.DEV_DB_PORT }}" >> .env
          echo "DEV_DB_NAME=${{ secrets.DEV_DB_NAME }}" >> .env
          echo "DEV_DB_USER=${{ secrets.DEV_DB_USER }}" >> .env
          echo "DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}" >> .env
          echo "DEV_JWT_SECRET=${{ secrets.DEV_JWT_SECRET }}" >> .env
          echo "DEV_KAKAO_CLIENT_ID=${{ secrets.DEV_KAKAO_CLIENT_ID }}" >> .env
          echo "DEV_KAKAO_CLIENT_SECRET=${{ secrets.DEV_KAKAO_CLIENT_SECRET }}" >> .env
          echo "DEV_KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}" >> .env
          echo "CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}" >> .env
          echo "CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}" >> .env
          echo "CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}" >> .env

      # 4️⃣ Gradle 캐시
      - name: Cache Gradle packages
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      # 5️⃣ Gradle 빌드 (테스트 포함)
      - name: Build with Gradle
        run: ./gradlew clean build -x test --no-daemon

      # 6️⃣ 단위 테스트 실행
      - name: Run tests
        run: ./gradlew test --no-daemon

      # 7️⃣ artifact 업로드 (CD에서 다운로드용)
      - name: Upload JAR artifact
        uses: actions/upload-artifact@v4
        with:
          path: build/libs/*.jar
          name: minimo-build
