name: CD

on:
  workflow_run:
    workflows: ["CI"]
    types:
      - completed

jobs:
  deploy:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest
    steps:
      - name: Deploy to EC2 via systemd
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ubuntu
          key: ${{ secrets.EC2_KEY }}
          port: 22
          script: |
            set -e
            # GitHub known_hosts 등록 (처음 clone 시 필요)
            ssh-keyscan github.com >> ~/.ssh/known_hosts

            # 배포 디렉토리 설정
            REPO_URL="git@github.com:9oormthon-univ/2025_SEASONTHON_TEAM_78_BE.git"
            DEPLOY_DIR="/home/ubuntu/backend"

            # 코드 클론 또는 pull
            if [ -d "$DEPLOY_DIR/.git" ]; then
              cd $DEPLOY_DIR
              git reset --hard HEAD
              git pull origin main
            else
              rm -rf $DEPLOY_DIR
              git clone $REPO_URL $DEPLOY_DIR
              cd $DEPLOY_DIR
            fi

            # .env 생성
            cat <<EOF > $DEPLOY_DIR/.env
            DEV_DB_HOST=${{ secrets.DEV_DB_HOST }}
            DEV_DB_PORT=${{ secrets.DEV_DB_PORT }}
            DEV_DB_NAME=${{ secrets.DEV_DB_NAME }}
            DEV_DB_USER=${{ secrets.DEV_DB_USER }}
            DEV_DB_PASSWORD=${{ secrets.DEV_DB_PASSWORD }}
            DEV_JWT_SECRET=${{ secrets.DEV_JWT_SECRET }}
            DEV_KAKAO_CLIENT_ID=${{ secrets.DEV_KAKAO_CLIENT_ID }}
            DEV_KAKAO_CLIENT_SECRET=${{ secrets.DEV_KAKAO_CLIENT_SECRET }}
            DEV_KAKAO_REDIRECT_URI=${{ secrets.DEV_KAKAO_REDIRECT_URI }}
            CLOUDINARY_CLOUD_NAME=${{ secrets.CLOUDINARY_CLOUD_NAME }}
            CLOUDINARY_API_KEY=${{ secrets.CLOUDINARY_API_KEY }}
            CLOUDINARY_API_SECRET=${{ secrets.CLOUDINARY_API_SECRET }}
            EOF

            # Gradle 빌드
            chmod +x ./gradlew
            ./gradlew clean build -x test

            # systemd 서비스 재시작
            sudo systemctl daemon-reload
            sudo systemctl restart backend.service
            sudo systemctl enable backend.service

            # 로그 확인 (최근 30줄)
            sudo journalctl -u cinepick-backend.service -n 30 --no-pager
